#!/usr/bin/env python
"""Convert XLSX from GoIndex to QIF

The QIFs are produced with the intent to import them to Banktivity.

This is configured by a configuration file (~/.goindex2qif) which should look as
follows:
[preceding trx]
payer = foo
category = bar

[goindex trx]
match_fund_source = blah
security = baz
"""

import argparse
import configparser
import os
import pandas as pd
import sys

sys.path.append(os.path.expanduser('~/usr/lib/python'))

from common import QIFInvestmentTransaction

CONFIG_FN = "~/.goindex2qif"

config = configparser.ConfigParser()
config.read(os.path.expanduser(CONFIG_FN))

preceding_trx_payer = config['preceding trx']['payer']
preceding_trx_category = config['preceding trx']['category']

match_fund_source = config['goindex trx']['match_fund_source']
security = config['goindex trx']['security']

arg_parser = argparse.ArgumentParser(
    description="Convert GoIndex XLSX statement to QIF for importing to "
    "Banktivity."
)

arg_parser.add_argument("input", type=str, help="The input file")
arg_parser.add_argument("output", type=str, help="The output file")

args = arg_parser.parse_args()

input_xlsx = pd.read_excel(args.input)

with open(args.output, "w", encoding='utf-8') as output_file:
    output_file.write("!Type:Invst\n")
    for index, row in input_xlsx.iterrows():
        date = row['Data']
        op = row['Fondo vnt. operacija']
        if op != match_fund_source:
            raise ValueError(f"Unknown match_fund_source {op}")
        amount = row['Įmokos/Išmokos'].replace(",", ".")
        unit_price = row['Fondo vieneto kaina'].replace(",", ".")
        count = row['Vnt. kiekis'].replace(",", ".")
        fee = row['Mokestis']
        qif_trx = QIFInvestmentTransaction(date, security, fee, amount,
                                           unit_price, count)
        print(qif_trx)

        output_file.write(f"D{date}\n")
        output_file.write("NCash\n")
        output_file.write(f"T{amount}\n")
        output_file.write("O0.00\n")
        output_file.write(f"P{preceding_trx_payer}\n")
        output_file.write(f"L{preceding_trx_category}\n")
        output_file.write("^\n")

        qif_trx.write(output_file)
