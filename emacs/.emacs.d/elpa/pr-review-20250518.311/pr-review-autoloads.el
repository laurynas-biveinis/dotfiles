;;; pr-review-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from pr-review.el

(autoload 'pr-review-url-parse "pr-review" "\
Return pr path (repo-owner repo-name pr-id) for URL, or nil on error.

(fn URL)")
(autoload 'pr-review-open "pr-review" "\
Open review buffer for REPO-OWNER/REPO-NAME PR-ID (number).
Open in current window if NEW-WINDOW is nil, in other window otherwise.
ANCHOR is a database id that may be present in the url fragment
of a github pr notification, if it's not nil, try to jump to specific
location after open.
LAST-READ-TIME is the time when the PR is last read (in ISO string,
mostly from notification buffer),
if it's not nil, newer comments will be highlighted,
and it will jump to first unread comment if ANCHOR is nil.

(fn REPO-OWNER REPO-NAME PR-ID &optional NEW-WINDOW ANCHOR LAST-READ-TIME)")
(autoload 'pr-review "pr-review" "\
Open Pr Review with URL (which is a link to github pr).
This is the main entrypoint of `pr-review'.
If NEW-WINDOW is not nil, open it in a new window.
When called interactively, user will be prompted to enter a PR url
and new window will be used when called with prefix.

(fn URL &optional NEW-WINDOW)" t)
(autoload 'pr-review-open-url "pr-review" "\
Open Pr Review with URL, in a new window if NEW-WINDOW is not nil.
This function is the same as `pr-review',
but it can be used in `browse-url-handlers' with `pr-review-url-parse'.

(fn URL &optional NEW-WINDOW &rest _)")
(register-definition-prefixes "pr-review" '("pr-review-"))


;;; Generated autoloads from pr-review-action.el

(register-definition-prefixes "pr-review-action" '("pr-review-"))


;;; Generated autoloads from pr-review-api.el

(register-definition-prefixes "pr-review-api" '("pr-review-"))


;;; Generated autoloads from pr-review-common.el

(register-definition-prefixes "pr-review-common" '("pr-review-"))


;;; Generated autoloads from pr-review-input.el

(register-definition-prefixes "pr-review-input" '("pr-review-"))


;;; Generated autoloads from pr-review-listview.el

(register-definition-prefixes "pr-review-listview" '("pr-review-"))


;;; Generated autoloads from pr-review-notification.el

(autoload 'pr-review-notification "pr-review-notification" "\
Show github notifications in a new buffer." t)
(register-definition-prefixes "pr-review-notification" '("pr-review-"))


;;; Generated autoloads from pr-review-render.el

(register-definition-prefixes "pr-review-render" '("pr-review-"))


;;; Generated autoloads from pr-review-search.el

(autoload 'pr-review-search "pr-review-search" "\
Search PRs using a custom QUERY and list result in buffer.
See github docs for syntax of QUERY.
When called interactively, you will be asked to enter the QUERY.

(fn QUERY)" t)
(autoload 'pr-review-search-open "pr-review-search" "\
Search PRs using a custom QUERY and open one of them.
See github docs for syntax of QUERY.
When called interactively, you will be asked to enter the QUERY.

(fn QUERY)" t)
(register-definition-prefixes "pr-review-search" '("pr-review-"))

;;; End of scraped data

(provide 'pr-review-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; pr-review-autoloads.el ends here
